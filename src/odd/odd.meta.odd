ws = -((.comment | .whitespace)?);

program := statements? ws end;

statements = ws statement (ws -";" ws statement)* ws;

statement =
  | declaration
  | type-declaration
  | expression;

declaration := pattern+ -"=" expression;

expression = lambda;

lambda =
  | lambda: guard? pattern ws -"->" ws lambda
  | operation;

operation =
  | operation: application (ws .operator ws operation)+
  | application;

application =
  | application: value (ws value)+
  | value;

value =
  | literal
  | list
  | record
  | -"(" ws expression ws -")";

literal =
  | .name
  | .string
  | .number
  | .boolean;

list := -"[" (destructuring (-"," destructuring)*)? -"]";

destructuring =
  | destructuring: "..." expression
  | expression;

record := -"{" (entry (-"," entry)*)? -"}";

entry =
  | destructuring
  | entry: literal pattern* -"=" expression;

type-declaration = pattern+ -":" type;